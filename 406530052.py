# -*- coding: utf-8 -*-
"""406530052

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VxlK4FfEZfzo2OIPQnE76MiMXhZlf60d
"""

import requests
from google.colab import drive
from os.path import join
from bs4 import BeautifulSoup as bs


import csv
import sys
import json
import re


ROOT = "/content/drive"
drive.mount(ROOT)

PROJ = "My Drive/DataScience/Ch04-CSV" # This is a custom path.
PROJECT_PATH = join(ROOT, PROJ)
!mkdir "{PROJECT_PATH}"
URL = "https://data.gov.tw/dataset/13949"
result = requests.get(URL)
myFile = join(PROJECT_PATH, "148234.html")
with open(myFile, 'w', encoding="utf8") as file:
    file.write(result.text)
soup = bs(result.text, "lxml")

#print(soup)
#targetJson = soup.select('script[type="application/ld+json"]')
target = soup.select('script[type="application/ld+json"]')
#targetJson = targetJson[targetJson.index("json")+2:]
#target = json.loads(str(targetJson))
#print(target)
TAG_RE = re.compile(r'<[^>]+>')
targetJson = json.loads(TAG_RE.sub('', str(target[0])))
#print(targetJson)
print(type(targetJson))

listIdx = 0
for i in targetJson:
  print(type(i))
  for name, value in i.items():
    #print("listIdx[{}]-->{},{}".format(listIdx, name, value))
    print()
  listIdx += 1
print(targetJson[1]["name"])
print(targetJson[1]["distribution"][0]["contentUrl"])


def openFile(tarFile):
	with open(tarFile) as myCSVFile:
		csvReader = csv.reader(myCSVFile, delimiter=',', quotechar='"')
		resultList = list(csvReader)

	return resultList

def print_Header_And_Few_Line(dataList, limit):
	limit = int(input("請輸入要顯示前面多少行："))
	counter = 0
	for i in dataList:
		if counter > limit:
			break;
		print(i)
		counter += 1

def getColumnIndex():
	colIdxList = []
	idxValue = int(input("請依序輸入你想要的欄位索引值，輸入 -1 結束："))
	
	if idxValue !=2:
		while idxValue >= 0 :
			colIdxList.append(idxValue)
			idxValue = int(input("請依序輸入你想要的欄位索引值，輸入 -1 結束："))
	
	return colIdxList

def genSQLValues(targetRow, selectedColumnList):
	result = "("
	if len(selectedColumnList)>0:
		for i in selectedColumnList:
			result += "\"{}\",".format(targetRow[i])
	else:
		for i in targetRow:
			result +="\"{}\",".format(i)

    # The * operator Concatenates multiple copies of the same tuple. 
	# for example:
	#  result = formatStr.format(*rowTuple)
	result = result[:-1] + "),"

	return result


def getCSV_From_URL(url):
	header ={'user-agent':"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36"}
	try:
		result = requests.get(url, headers=header, allow_redirects=True)
	except:
		result = "Exception"
		print("{} has exception!!".format(url)) 
	return result

def getTargetJson(urlCode):
		URL="https://data.gov.tw/en/datasets/{}".format(urlCode)
		result = requests.get(URL)
		soup = bs(result.text,  "lxml")  
		target = soup.select('script[type="application/1d+json"]')
    #targetJson = json.loads(TAG_RE.sub('', str(target[0])))
		print(targetJson[1]["name"])
		print(targetJson[1]["distribution"][0]["contentUrl"])
		return targetJson

		
	


def genSQL_Insert_Cmd(tableName, dataList, colList):
	result = []
	result.append("Insert into {} values (".format(tableName))

	#處理到倒數第二行
	for i in dataList[:-2] :
		result.append(genSQLValues(i, colList))

	#最後一行要用 ); 所以獨立處理
	lastRec = genSQLValues(dataList[-1], colList)
	result.append(lastRec[:-1] + ");\n")		

	return result










if __name__ == '__main__' :

	ROOT="/content/drive"
	drive.mount(ROOT)
	PROJ="My Drive/DataScience/110-2/Final/406530052"
	PROJECT_PATH=join(ROOT,PROJ)
	!mkdir -p "{PROJECT_PATH}"
	TAG_RE = re.compile(r'<[^>]+>')


	stock =[13949]
	for urlCode in stock:
				targetJson = getTargetJson(urlCode)
				
				#getcsv
				myFile = join(PROJECT_PATH, "{}-{}.csv".format(urlCode,targetJson[1]["name"]))
				print(myFile)
				fileContent = getCSV_From_URL(targetJson[1]["distribution"][0]["contentUrl"])
				
				
				#get the data or not
				if fileContent == "Exception" :
					print("Cannot get data")
				else:
					with open(myFile, 'wb') as f:
						f.write(fileContent.content)
		
				#csv to list
				dataList = openFile(myFile)
				print(dataList[:10])
				colList = []
				tabName = "13949"

				colList = getColumnIndex()
				colList.sort
				print("\n你選擇的欄位為：{}".format(colList))

				#yield SQL Command list
				datalist = dataList[1:]
				tabName = str(urlCode)
				sqlList = genSQL_Insert_Cmd(tabName,dataList,colList)
		
				print(sqlList[:5])
				print("資料寫入檔案：{}.sql".format(tabName))
				SqlFile = join(PROJECT_PATH, "{}-{}.sql".format(urlCode,targetJson[1]["name"]))
				with open(SqlFile, 'w') as f:
					for item in sqlList:
						f.write("{}\n".format(item))
			     


#	inputFile = input("請輸入要讀取的檔名：")
#	dataList = openFile(inputFile)
	
	#limit = int(input("請輸入要顯示前面多少行："))
  #print_Header_And_Few_Line(dataList, limit)
	
#	colList = getColumnIndex()
#	colList.sort
#	print("\n你選擇的欄位為：{}".format(colList))

#	dataList = dataList[1:]
	#print("\n去掉第一列「欄位名」後：")
	#print_Header_And_Few_Line(dataList, limit)

#	tabName = input("你要輸入的資料庫檔名是：")
	

    #印出前三行與末三行
#	print("產生資料的前三行與末三行為：")
#	print(sqlList[:3])
#	print()
#	print(sqlList[-4:-1])

	# 將資料寫入一個檔案

	# 以下是寫入資料庫的範例程式
	#conn = psycopg2.connect(database="your_datbase_name", user="username", password="password", host="ip_address", port="5432")
	#print("Opened database successfully")
	#cur = conn.cursor()
	#with open("{}.sql".format(tabName), 'r') as sqlfile:
	#	cur.execute(sqlfile.read())
	#	conn.commit()
	
	print("程式正常結束")
	#sys.exit(0)